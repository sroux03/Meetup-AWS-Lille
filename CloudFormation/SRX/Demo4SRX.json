{
 "AWSTemplateFormatVersion" : "2010-09-09",
 "Description" : "This CF Template will be used to deploy my sample application preprod and prod. It works on 2 different AWS regions, eu-west-1 and us-west-1",
 "Parameters" : {
  "Keyname": {
    "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
    "Type": "AWS::EC2::KeyPair::KeyName",
    "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
  },
  "ProdApplicationSizing" : {
   "Description" : "Defines the sizing of the application.",
   "Type" : "String",
   "AllowedValues" : [ "XS","S","M","L","XL" ],
   "ConstraintDescription" : "Allowed values are : XS,S,M,L,XL"
  },
  "PreprodApplicationSizing" : {
   "Description" : "Defines the sizing of preproduction platform of the application.",
   "Type" : "String",
   "AllowedValues" : [ "XS","S","M","L","XL" ],
   "ConstraintDescription" : "Allowed values are : XS,S,M,L,XL"
  },
  "AdminGatewayIP" : {
  	"Description" : "Enter the IP from where you'll connect with SSH.",
  	"Type" : "String",
	"MinLength": "9",
	"MaxLength": "18",
    "Default": "85.68.148.121/32",
    "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    "ConstraintDescription": "must be a valid IP CIDR range."
  },
  "DBAdminUser" : {
	"Description" : "Enter db admin username",
  	"Type" : "String",
	"MinLength": "4",
	"MaxLength": "20",
    "Default": "wpadmin",
    "ConstraintDescription": "4 to 20 characters username"	  		  
  },
  "DBAdminPassword" : {
  	"Description" : "Enter db admin password",
  	"Type" : "String",
	"MinLength": "8",
	"MaxLength": "20",
    "Default": "wpadmin59",
    "ConstraintDescription": "8 to 20 characters password"
  },
  "PreprodDBName" : {
  	"Description" : "Enter preprod db name",
  	"Type" : "String",
	"MinLength": "4",
	"MaxLength": "20",
    "Default": "wpppd",
    "ConstraintDescription": "4 to 20 characters name"
  },
  "ProdDBName" : {
    "Description" : "Enter Prod db name",
  	"Type" : "String",
	"MinLength": "4",
	"MaxLength": "20",
    "Default": "wpprod",
    "ConstraintDescription": "4 to 20 characters name"
  }
 },
 "Mappings" : {
 	"Sizing" : {
 		"BDD" : {
 			"XS" : "db.t2.micro",
 			"S" : "db.t2.micro",
 			"M" : "db.t2.medium",
 			"L" : "db.m3.large",
 			"XL" : "db.m3.xlarge"
 		},
 		"WWW" : {
 			"XS" : "t2.nano",
 			"S" : "t2.micro",
 			"M" : "t2.small",
 			"L" : "m3.large",
 			"XL" : "m3.xlarge"
 		}
 	},
 	"PrivateScopes" : {
 		"eu-west-1" : {
 			"CIDR" : "172.20.0.0/16",
 			"DmzA" : "172.20.0.0/24",
 			"DmzB" : "172.20.1.0/24",
 			"BackA" : "172.20.2.0/24",
 			"BackB" : "172.20.3.0/24"
 		},
 		"us-west-1" : {
 			"CIDR" : "10.0.0.0/16",
 			"DmzA" : "10.0.0.0/24",
 			"DmzB" : "10.0.1.0/24",
 			"BackA" : "10.0.2.0/24",
 			"BackB" : "10.0.3.0/24"
 		}
 	},
 	"AZ" : {
 		"eu-west-1" : {
 			"AZa" : "eu-west-1b",
 			"AZb" : "eu-west-1c"	
 		},
 		"us-west-1" : {
 			"AZa" : "us-west-1b",
 			"AZb" : "us-west-1c"
 		}
 	},
 	"AMIs" : {
 		"eu-west-1" : {
 			"OS" : "Ubuntu",
 			"id" : "ami-f95ef58a"
 		},
 		"us-west-1" : {
 			"OS" : "Ubuntu",
 			"id" : "ami-06116566"
 		}
 	}
 },
 "Resources" : {
 	"InternetGW" : {
		"Type" : "AWS::EC2::InternetGateway",
		"Properties" : {
      		"Tags" : [ { "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "DemoVPC" },{"Key" : "CIDR" ,"Value" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "CIDR" ]}}]
   		}
 	},
 	"demoVPC" : {
		"Type" : "AWS::EC2::VPC",
   			"Properties" : {
      		"CidrBlock" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "CIDR" ]},
      		"Tags" : [ { "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "DemoVPC" },{"Key" : "CIDR" ,"Value" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "CIDR" ]}}]
   			}
	},
	"InternetGWAttachment" : {
   		"Type" : "AWS::EC2::VPCGatewayAttachment",
   		"DependsOn" : ["InternetGW", "demoVPC"],
   		"Properties" : {
      	"InternetGatewayId" : { "Ref" : "InternetGW" },
      	"VpcId" : { "Ref" : "demoVPC" }
   		}
	},
	"DefaultRouteTable" : {
		"Type" : "AWS::EC2::RouteTable",
		"DependsOn" : ["demoVPC"],
   		"Properties" : {
      		"VpcId" : { "Ref" : "demoVPC" },
      		"Tags" : [ { "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "DemoVPC" }]
   		}
	},
	"DefaultRoute" : {
		"Type" : "AWS::EC2::Route",
  		"Properties" : {
    		"DestinationCidrBlock" : "0.0.0.0/0",
    		"GatewayId" : { "Ref" : "InternetGW" },
    		"RouteTableId" : { "Ref" : "DefaultRouteTable" }
  		}
	}, 
	"DmzA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { 
	    "AvailabilityZone" : { "Fn::FindInMap" : ["AZ",{ "Ref" : "AWS::Region" },"AZa"]},
        "CidrBlock" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzA" ]},
        "VpcId" : { "Ref" : "demoVPC"},
        "Tags" : [{ "Key" : "Name", "Value" : "DmzA" },{ "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Zone", "Value" : "DMZ" },{"Key" : "CIDR" ,"Value" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzA" ]}}]
      }
    },
	"DmzB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { 
	    "AvailabilityZone" : { "Fn::FindInMap" : ["AZ",{ "Ref" : "AWS::Region" },"AZb"]},
        "CidrBlock" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzB" ]},
        "VpcId" : { "Ref" : "demoVPC"},
        "Tags" : [{ "Key" : "Name", "Value" : "DmzB" },{ "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Zone", "Value" : "DMZ" },{"Key" : "CIDR" ,"Value" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzB" ]}}]
      }
    },
	"BackA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { 
	    "AvailabilityZone" : { "Fn::FindInMap" : ["AZ",{ "Ref" : "AWS::Region" },"AZa"]},
        "CidrBlock" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackA" ]},
        "VpcId" : { "Ref" : "demoVPC"},
        "Tags" : [{ "Key" : "Name", "Value" : "BackA" },{ "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Zone", "Value" : "BACK" },{"Key" : "CIDR" ,"Value" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackA" ]}}]
      }
    },
	"BackB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { 
	    "AvailabilityZone" : { "Fn::FindInMap" : ["AZ",{ "Ref" : "AWS::Region" },"AZb"]},
        "CidrBlock" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackB" ]},
        "VpcId" : { "Ref" : "demoVPC"},
        "Tags" : [{ "Key" : "Name", "Value" : "BackB" },{ "Key" : "PROJECT", "Value" : "DemoMeetup" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Zone", "Value" : "BACK" },{"Key" : "CIDR" ,"Value" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackB" ]}}]
      }
    },
    "DmzARouteTableAssociation" : {
		"Type" : "AWS::EC2::SubnetRouteTableAssociation",
    	"Properties" : {
    		"SubnetId" : { "Ref" : "DmzA" },
        	"RouteTableId" : {"Ref" : "DefaultRouteTable" }
        }
	},
    "DmzBRouteTableAssociation" : {
		"Type" : "AWS::EC2::SubnetRouteTableAssociation",
    	"Properties" : {
    		"SubnetId" : { "Ref" : "DmzB" },
        	"RouteTableId" : {"Ref" : "DefaultRouteTable" }
        }
	},
	"EIPPreprodServer" : {
   		"Type" : "AWS::EC2::EIP",
   		"DependsOn" : ["InternetGW"],
   		"Properties" : {
      		"InstanceId" : { "Ref" : "PreprodApacheServer" },
      		"Domain" : "vpc"
   		}
	},
	"EIPProdServer1" : {
   		"Type" : "AWS::EC2::EIP",
   		"DependsOn" : ["InternetGW"],
   		"Properties" : {
      		"InstanceId" : { "Ref" : "ProdApacheServer1" },
      		"Domain" : "vpc"
   		}
	},
	"EIPProdServer2" : {
   		"Type" : "AWS::EC2::EIP",
   		"DependsOn" : ["InternetGW"],
   		"Properties" : {
      		"InstanceId" : { "Ref" : "ProdApacheServer2" },
      		"Domain" : "vpc"
   		}
	},
    "SgDmzServerPreprod" : {
    	"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "Security group for Preprod Server",
			"VpcId" : {"Ref" : "demoVPC"},
        	"SecurityGroupIngress" : [ 
        		{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
        		{ "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22", "CidrIp" : {"Ref" : "AdminGatewayIP"}}
        	],
			"SecurityGroupEgress" : [ 
				{ "IpProtocol" : "tcp", "FromPort" : "3306",  "ToPort" : "3306", "CidrIp" :  { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackA"]}},
				{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
				{ "IpProtocol" : "tcp", "FromPort" : "443",  "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
			],
			"Tags" : [{ "Key" : "Name", "Value" : "SGDMZServerPreprod" },  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Zone", "Value" : "DMZ" }, { "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Preprod" }]
      	}	
    },
    "SgDmzServerProd" : {
    	"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "Security group for Prod Servers",
			"VpcId" : {"Ref" : "demoVPC"},
        	"SecurityGroupIngress" : [
        		{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" :  { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzA"]} },
				{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" :  { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzB"]} },
        		{ "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22", "CidrIp" : {"Ref" : "AdminGatewayIP"}}
        	],
			"SecurityGroupEgress" : [ 
				{ "IpProtocol" : "tcp", "FromPort" : "3306",  "ToPort" : "3306", "CidrIp" :  { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackA"]} },
				{ "IpProtocol" : "tcp", "FromPort" : "3306",  "ToPort" : "3306", "CidrIp" :  { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "BackB"]} },
				{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
				{ "IpProtocol" : "tcp", "FromPort" : "443",  "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
			],
			"Tags" : [{ "Key" : "Name", "Value" : "SGDMZServerProd" }, { "Key" : "Zone", "Value" : "DMZ" }, { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }]
      	}	
    },
    "SgDmzELBProd" : {
    	"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "Security group for LB",
			"VpcId" : {"Ref" : "demoVPC"},
        	"SecurityGroupIngress" : [ 
        		{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : "0.0.0.0/0"}
        	],
			"SecurityGroupEgress" : [ 
				{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzA"]} },
				{ "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80", "CidrIp" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzB"]} }
			],
			"Tags" : [{ "Key" : "Name", "Value" : "SgDmzELBProd" }, { "Key" : "Zone", "Value" : "DMZ" }, { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }]
      	}	
    },
    "SgBackDBPreprod" : {
    	"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "Security group for preprod DB",
			"VpcId" : {"Ref" : "demoVPC"},
        	"SecurityGroupIngress" : [ 
        		{ "IpProtocol" : "tcp", "FromPort" : "3306",  "ToPort" : "3306", "CidrIp" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzA"]}}
        	],
			"Tags" : [{ "Key" : "Name", "Value" : "SgBackDBPreprod" }, { "Key" : "Zone", "Value" : "DMZ" }, { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "VPC", "Value" : "demoVPC" }, { "Key" : "Environement", "Value" : "Preprod" }]
      	}	
    },  
	"SgBackDBProd" : {
    	"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
			"GroupDescription" : "Security group for preprod DB",
			"VpcId" : {"Ref" : "demoVPC"},
        	"SecurityGroupIngress" : [ 
        		{ "IpProtocol" : "tcp", "FromPort" : "3306",  "ToPort" : "3306", "CidrIp" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzA"]}},
        		{ "IpProtocol" : "tcp", "FromPort" : "3306",  "ToPort" : "3306", "CidrIp" : { "Fn::FindInMap" : [ "PrivateScopes", { "Ref" : "AWS::Region" }, "DmzB"]}}
        	],
			"Tags" : [{ "Key" : "Name", "Value" : "SgBackDBProd" }, { "Key" : "Zone", "Value" : "DMZ" }, { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }]
      	}	
    },
    "PreprodApacheServer" : {
    	"Type" : "AWS::EC2::Instance",
		"Properties" : {
			"KeyName" : {"Ref": "Keyname"},
        	"InstanceType" : { "Fn::FindInMap" : ["Sizing","WWW",{"Ref" : "PreprodApplicationSizing"}]},
	    	"SubnetId" : {"Ref" : "DmzA"},
       		"ImageId"  : { "Fn::FindInMap" : ["AMIs",{ "Ref" : "AWS::Region" },"id"]},
        	"SecurityGroupIds" : [{"Ref" : "SgDmzServerPreprod"}],
			"Tags" : [{ "Key" : "Name", "Value" : "PreprodApacheServer" },  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Role", "Value" : "WebServer" }, 
			  { "Key" : "Zone", "Value" : "DMZ" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Preprod" }],
            "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                                                                          "#!/bin/bash -xe\n",
																		  "apt-get update && apt-get -y install apache2 php5 mysql-client php5-mysql libwww-perl\n",
																		  "wget -O /tmp/node1.sh https://s3-eu-west-1.amazonaws.com/meetupawslille/CloudFormation/node1.sh && chmod 755 /tmp/node1.sh\n",
																		  "/tmp/node1.sh\n",
																		  "sed -i 's/dbname_toreplace/",{ "Ref" : "PreprodDBName"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbusername_toreplace/",{ "Ref" : "DBAdminUser"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbpassword_toreplace/",{ "Ref" : "DBAdminPassword"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbhost_toreplace/",{"Fn::GetAtt" : ["PreprodDB", "Endpoint.Address"]},"/g' /var/www/html/wordpress/wp-config.php\n"
							           							]]
												}
		}	
	  }
	},
    "ProdApacheServer1" : {
    	"Type" : "AWS::EC2::Instance",
		"Properties" : {
			"KeyName" : {"Ref": "Keyname"},
        	"InstanceType" : { "Fn::FindInMap" : ["Sizing","WWW",{"Ref" : "ProdApplicationSizing"}]},
	    	"SubnetId" : {"Ref" : "DmzA"},
       		"ImageId"  : { "Fn::FindInMap" : ["AMIs",{ "Ref" : "AWS::Region" },"id"]},
        	"SecurityGroupIds" : [{"Ref" : "SgDmzServerProd"}],
			"Tags" : [{ "Key" : "Name", "Value" : "ProdApacheServer1" },  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Role", "Value" : "WebServer" }, 
			  { "Key" : "Zone", "Value" : "DMZ" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }],
            "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                                                                          "#!/bin/bash -xe\n",
																		  "apt-get update && apt-get -y install apache2 php5 mysql-client php5-mysql libwww-perl\n",
																		  "wget -O /tmp/node1.sh https://s3-eu-west-1.amazonaws.com/meetupawslille/CloudFormation/node1.sh && chmod 755 /tmp/node1.sh\n",
																		  "/tmp/node1.sh\n",
																		  "sed -i 's/dbname_toreplace/",{ "Ref" : "ProdDBName"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbusername_toreplace/",{ "Ref" : "DBAdminUser"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbpassword_toreplace/",{ "Ref" : "DBAdminPassword"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbhost_toreplace/",{"Fn::GetAtt" : ["ProdDB", "Endpoint.Address"]},"/g' /var/www/html/wordpress/wp-config.php\n"
							           							]]
												}
		}	
	  }
	},
	"ProdApacheServer2" : {
    	"Type" : "AWS::EC2::Instance",
		"Properties" : {
			"KeyName" : {"Ref": "Keyname"},
        	"InstanceType" : { "Fn::FindInMap" : ["Sizing","WWW",{"Ref" : "ProdApplicationSizing"}]},
	    	"SubnetId" : {"Ref" : "DmzB"},
       		"ImageId"  : { "Fn::FindInMap" : ["AMIs",{ "Ref" : "AWS::Region" },"id"]},
        	"SecurityGroupIds" : [{"Ref" : "SgDmzServerProd"}],
			"Tags" : [{ "Key" : "Name", "Value" : "ProdApacheServer2" },  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Role", "Value" : "WebServer" }, 
			  { "Key" : "Zone", "Value" : "DMZ" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }],
            "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                                                                          "#!/bin/bash -xe\n",
																		  "apt-get update && apt-get -y install apache2 php5 mysql-client php5-mysql libwww-perl\n",
																		  "wget -O /tmp/node1.sh https://s3-eu-west-1.amazonaws.com/meetupawslille/CloudFormation/node1.sh && chmod 755 /tmp/node1.sh\n",
																		  "/tmp/node1.sh\n",
																		  "sed -i 's/dbname_toreplace/",{ "Ref" : "ProdDBName"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbusername_toreplace/",{ "Ref" : "DBAdminUser"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbpassword_toreplace/",{ "Ref" : "DBAdminPassword"},"/g' /var/www/html/wordpress/wp-config.php\n",
																		  "sed -i 's/dbhost_toreplace/",{"Fn::GetAtt" : ["ProdDB", "Endpoint.Address"]},"/g' /var/www/html/wordpress/wp-config.php\n"
							           							]]
												}
		}	
	  }
	},
	"ProdELB" : {
 		"Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
 		"DependsOn" : [ "ProdApacheServer1", "ProdApacheServer2" ],
 		"Properties" : {
   			"Scheme" : "internet-facing",
   			"SecurityGroups" : [ { "Ref" : "SgDmzELBProd" } ],
			"Subnets" :  [{"Ref" : "DmzA"},{"Ref" : "DmzB"}],
   			"Instances" : [ { "Ref" : "ProdApacheServer1" },{ "Ref" : "ProdApacheServer2" }],
   			"LoadBalancerName" : "ProdELB",
   			"Listeners" : [ {
						"LoadBalancerPort" : "80",
						"InstancePort" : "80",
						"Protocol" : "HTTP"
   			} ],
   			"HealthCheck" : {
     				"Target" : "HTTP:80/",
     				"HealthyThreshold" : "3",
     				"UnhealthyThreshold" : "5",
     				"Interval" : "30",
     				"Timeout" : "5"
   			},
   			"Tags" : [{ "Key" : "Name", "Value" : "ProdELB" },  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Role", "Value" : "LoadBalancer" }, 
			  { "Key" : "Zone", "Value" : "DMZ" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }]
 		}
	},
	"DBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "Subnets available for the RDS DB Instance",
        "SubnetIds" : [ { "Ref" : "BackA" }, { "Ref" : "BackB" } ]
      }
    },
	"PreprodDB" : {
		"Type" : "AWS::RDS::DBInstance",
		"DependsOn" : [ "DBSubnetGroup", "SgBackDBPreprod" ],
      	"Properties" : {
        	"DBName" : { "Ref" : "PreprodDBName"},
        	"DBInstanceIdentifier" : { "Ref" : "PreprodDBName"},
        	"AvailabilityZone" : { "Fn::FindInMap" : ["AZ",{ "Ref" : "AWS::Region" },"AZa"]},
        	"MultiAZ" : "false",
        	"AllocatedStorage" : "5",
        	"DBInstanceClass" : { "Fn::FindInMap" : ["Sizing","BDD",{"Ref" : "PreprodApplicationSizing"}]},
        	"Engine" : "MySQL",
        	"MasterUsername" : {"Ref" : "DBAdminUser"},
        	"MasterUserPassword" : {"Ref" : "DBAdminPassword"},
        	"PubliclyAccessible" : "false",
        	"DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" },
        	"VPCSecurityGroups" : [ { "Ref" : "SgBackDBPreprod" } ],
        	"Tags" : [{ "Key" : "Name", "Value" : { "Ref" : "PreprodDBName"} },  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Rôle", "Value" : "DB" }, 
			  { "Key" : "Zone", "Value" : "Back" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Preprod" }]
        	
      }
    },
	"ProdDB" : {
		"Type" : "AWS::RDS::DBInstance",
		"DependsOn" : [ "DBSubnetGroup", "SgBackDBProd" ],
      	"Properties" : {
        	"DBName" : { "Ref" : "ProdDBName"},
        	"DBInstanceIdentifier" : { "Ref" : "ProdDBName"},
        	"MultiAZ" : "true",
        	"AllocatedStorage" : "5",
        	"DBInstanceClass" : { "Fn::FindInMap" : ["Sizing","BDD",{"Ref" : "ProdApplicationSizing"}]},
        	"Engine" : "MySQL",
        	"MasterUsername" : {"Ref" : "DBAdminUser"},
        	"MasterUserPassword" : {"Ref" : "DBAdminPassword"},
        	"PubliclyAccessible" : "false",
        	"DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" },
        	"VPCSecurityGroups" : [ { "Ref" : "SgBackDBProd" } ],
        	"Tags" : [{ "Key" : "Name", "Value" : { "Ref" : "ProdDBName"}},  { "Key" : "PROJECT", "Value" : "DemoMeetup" }, { "Key" : "Rôle", "Value" : "DB" }, 
			  { "Key" : "Zone", "Value" : "Back" },{ "Key" : "VPC", "Value" : "demoVPC" },{ "Key" : "Environement", "Value" : "Prod" }]
        	
      }
    }
     
 },
 "Outputs" :{
 	"PreprodAppURL" : {
 		"Description" : "Application Url on preprod platform",
 		"Value" : { "Fn::Join" : ["",["http://",{"Fn::GetAtt":["PreprodApacheServer","PublicIp"]},"/wordpress/"]] } 
 	},
 	"ProdAppURL" : {
 		"Description" : "Application Url on prod platform (Load balancer DNS name)",
 		"Value" : { "Fn::Join" : ["",["http://",{"Fn::GetAtt":["ProdELB","DNSName"]},"/wordpress/"]] } 
 	}	
 	
 }

}
